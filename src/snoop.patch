diff --git a/src/codegen.cpp b/src/codegen.cpp
index 441df49..6ba2903 100644
--- a/src/codegen.cpp
+++ b/src/codegen.cpp
@@ -620,6 +620,15 @@ static void maybe_alloc_arrayvar(jl_sym_t *s, jl_codectx_t *ctx)
     }
 }
 
+// Snooping on which functions are being compiled, and how long it takes
+JL_STREAM *dump_compiles_stream = NULL;
+uint64_t last_time = 0;
+extern "C" DLLEXPORT
+void jl_dump_compiles(void *s)
+{
+    dump_compiles_stream = (JL_STREAM*)s;
+}
+
 // --- entry point ---
 //static int n_emit=0;
 static Function *emit_function(jl_lambda_info_t *lam);
@@ -631,6 +640,8 @@ static Function *to_function(jl_lambda_info_t *li)
     BasicBlock *old = nested_compile ? builder.GetInsertBlock() : NULL;
     DebugLoc olddl = builder.getCurrentDebugLocation();
     bool last_n_c = nested_compile;
+    if (!nested_compile)
+        last_time = jl_hrtime();
     nested_compile = true;
     jl_gc_inhibit_finalizers(nested_compile);
     Function *f = NULL;
@@ -684,6 +695,13 @@ static Function *to_function(jl_lambda_info_t *li)
     nested_compile = last_n_c;
     jl_gc_inhibit_finalizers(nested_compile);
     JL_SIGATOMIC_END();
+    uint64_t this_time = jl_hrtime();
+    if (dump_compiles_stream != NULL) {
+        jl_printf(dump_compiles_stream, "%lu\t\"", this_time-last_time);
+        jl_static_show(dump_compiles_stream, (jl_value_t*)li);
+        jl_printf(dump_compiles_stream, "\"\n");
+    }
+    last_time = this_time;
     return f;
 }
 
